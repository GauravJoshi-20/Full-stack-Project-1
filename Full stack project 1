// App.js
import React from 'react';
import ProductList from './components/ProductList';

function App() {
  return (
    <div className="p-4">
      <h1 className="text-3xl font-bold mb-4">Dream Girl Gaming Store</h1>
      <ProductList />
    </div>
  );
}

export default App;

// components/ProductList.js
import React, { useEffect, useState } from 'react';

function ProductList() {
  const [products, setProducts] = useState([]);
  const [departments, setDepartments] = useState([]);
  const [selected, setSelected] = useState('');

  useEffect(() => {
    fetch('http://localhost:3000/api/departments')
      .then(res => res.json())
      .then(data => setDepartments(data));
  }, []);

  useEffect(() => {
    let url = 'http://localhost:3000/api/products';
    if (selected) url += `?department=${selected}`;
    fetch(url)
      .then(res => res.json())
      .then(data => setProducts(data));
  }, [selected]);

  return (
    <div>
      <select
        onChange={(e) => setSelected(e.target.value)}
        className="border p-2 rounded mb-4"
      >
        <option value="">All Departments</option>
        {departments.map(dep => (
          <option key={dep._id} value={dep._id}>{dep.name}</option>
        ))}
      </select>

      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
        {products.map(p => (
          <div key={p._id} className="border p-4 rounded shadow">
            <h2 className="text-xl font-semibold">{p.name}</h2>
            <p className="text-sm text-gray-600">{p.description}</p>
            <p className="text-lg font-bold mt-2">â‚¹{p.price}</p>
            <p className="text-sm italic text-pink-600">{p.department?.name}</p>
          </div>
        ))}
      </div>
    </div>
  );
}

export default ProductList;

// File: models/Product.js
const mongoose = require('mongoose');

const ProductSchema = new mongoose.Schema({
  name: String,
  description: String,
  price: Number,
  department: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Department',
  },
});

module.exports = mongoose.model('Product', ProductSchema);

// File: models/Department.js
const DepartmentSchema = new mongoose.Schema({
  name: String,
});
module.exports = mongoose.model('Department', DepartmentSchema);

// File: server.js
const express = require('express');
const mongoose = require('mongoose');
const Product = require('./models/Product');
const Department = require('./models/Department');
const cors = require('cors');

const app = express();
app.use(express.json());
app.use(cors());

mongoose.connect('mongodb://localhost:27017/ecommerce');

// REST API for Products
app.get('/api/products', async (req, res) => {
  const query = req.query.department
    ? { department: req.query.department }
    : {};
  const products = await Product.find(query).populate('department');
  res.json(products);
});

app.get('/api/products/:id', async (req, res) => {
  const product = await Product.findById(req.params.id).populate('department');
  res.json(product);
});

// REST API for Departments
app.get('/api/departments', async (req, res) => {
  const departments = await Department.find();
  res.json(departments);
});

app.listen(3000, () => console.log('Server running on http://localhost:3000'));

// File: loadCSV.js
const fs = require('fs');
const csv = require('csv-parser');
const Product = require('./models/Product');
const mongoose = require('mongoose');

mongoose.connect('mongodb://localhost:27017/ecommerce');

fs.createReadStream('products.csv')
  .pipe(csv())
  .on('data', async (row) => {
    const product = new Product(row);
    await product.save();
  });
